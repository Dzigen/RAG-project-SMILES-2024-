from dataclasses import dataclass, field

@dataclass
class UncertaintyScorerConfig:
    system_prompt: str = '''Ты - экспертная система, задача которой - оценить релевантность текста по отношению к заданному вопросу. На вход поступает вопрос и текст, твоя задача - вернуть одну из двух меток: "{cert_label}" - в тексте можно найти ответ на вопрос и "{uncert_label}" - опираясь на текст нельзя ответить на вопрос. Не пиши ничего другого, кроме предсказываемой метки релевантности: "{cert_label}" либо "{uncert_label}".

Примеры: 

Вопрос: Кто такой барсук?
Документ: Ло́шадь Пржева́льского, или тахи — вид или подвид дикой лошади, обитающий в Азии. К 1969 году лошадей Пржевальского в дикой природе не осталось, они сохранились лишь в неволе. Затем осуществлялись программы по их реинтродукции (возвращению в дикую природу). Барсу́к, или обыкнове́нный барсу́к (лат. Meles meles) — вид млекопитающих из рода барсуков семейства куньих.
Метка: {cert_label}

Вопрос: Где обитают дельфины?
Документ: Розетки, рассчитанные на 220 Вольт, обычно используют для подключения различных электрических приборов, мощность которых не превышает 3,5 кВт.
Метка: {uncert_label}

Вопрос: Почему Мурзик выбрал именно этот дворик?
Документ: Маленький котенок по имени Мурзик потерялся в большом городе. Он долго бродил по улицам, пока не нашел уютный дворик с доброй старушкой. Старушка приютила его и назвала своим новым другом. С тех пор Мурзик всегда был рядом с ней, даря тепло и радость.
Метка: {cert_label}

Вопрос: Когда родился Александр Сергеевич Пушкин?
Документ: Пушкин был женат на Наталье Гончаровой. Ива́н Серге́евич Турге́нев (28 октября (9 ноября) 1818, Орёл, Российская империя — 22 августа (3 сентября) 1883, Буживаль, Франция) — русский писатель-реалист, поэт, публицист, драматург, переводчик.
Метка: {uncert_label}'''
    user_prompt_template: str = "Вопрос: {q}\nДокумент: {c}\nМетка: "
    cert_label: str = "1"
    uncert_label: str = "0"
    gen: dict = field(default_factory=lambda: {'max_new_tokens': 20, 'eos_token_id': 79097})
    batch_size: int = 8
    
@dataclass
class ComplexityScorerConfig:
    system_prompt: str = ""
    user_prompt_template: str = "Вопрос: {q}\nМетка: "
    complex_label: str = "сложный"
    simple_label: str = "простой"
    gen: dict = field(default_factory=lambda: {'max_new_tokens': 20, 'eos_token_id': 79097})

from dataclasses import dataclass, field

@dataclass
class SimilarityScorerConfig:
    system_prompt: str = '''Ты - экспертная система, задача которой - оценить похожесть (смысловую) двух текстов. На вход поступает два текста, твоя задача - вернуть одну из двух меток: "{sim_label}" - тексты содержат одинаковую семантическую информацию (равны по смыслу) и "{dissim_label}" - Тексты содержат разную сементическую информацию (отличаются по смыслу). Если в текстах идёт описание разные объектов/cущностей, то они разные: необходимо поставить метку "{dissim_label}". Не пиши ничего другого, кроме предсказываемой метки релевантности: только "{sim_label}" или "{dissim_label}".

Примеры: 

Текст #1: У меня нет ответа на ваш вопрос.
Текст #2: У меня нет ответа на ваш вопрос.
Метка: {sim_label}

Текст #1: У меня нет ответа на ваш вопрос.
Текст #2: У меня есть ответ на ваш вопрос.
Метка: {dissim_label}

Текст #1: У меня нет ответа на ваш вопрос.
Текст #2: У меня нет соответствующей информации для ответа на ваш вопрос.
Метка: {sim_label}

Текст #1: У меня нет ответа на ваш вопрос.
Текст #2: У меня есть соответствующая информация для ответа на ваш вопрос. 
Метка: {dissim_label}

Текст #1: У меня нет ответа на ваш вопрос.
Текст #2: У меня нет информации, чтобы ответить на ваш вопрос.
Метка: {sim_label}

Текст #1: У меня нет ответа на ваш вопрос.
Текст #2: У меня нет нужной информации для ответа на ваш вопрос.
Метка: {sim_label}

Текст #1: У меня нет ответа на ваш вопрос.
Текст #2: У меня есть нужная информации для ответа на ваш вопрос.
Метка: {dissim_label}

Текст #1: У меня нет ответа на ваш вопрос.
Текст #2: У меня нет необходимой информации для ответа на ваш вопрос.
Метка: {sim_label}

Текст #1: У меня нет ответа на ваш вопрос.
Текст #2: У меня есть информации для ответа на ваш вопрос.
Метка: {dissim_label}

Текст #1: У меня нет ответа на ваш вопрос.
Текст #2: Чай будет вкуснее, если его нагреть и добавить сахар.
Метка: {dissim_label}

Текст #1: У меня нет ответа на ваш вопрос.
Текст #2: Дельфины живут в больших водоёмах.
Метка: {dissim_label}'''

    user_prompt_template: str = "Текст #1: {txt1}\nТекст #2: {txt2}\nМетка: "
    sim_label: str = "похожие" 
    dissim_label: str = "разные"
    gen: dict = field(default_factory=lambda: {'max_new_tokens': 20, 'eos_token_id': 79097})
    batch_size: int = 8

